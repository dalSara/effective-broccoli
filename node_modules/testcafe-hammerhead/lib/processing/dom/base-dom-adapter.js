'use strict';

exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------

var BaseDomAdapter = function () {
    function BaseDomAdapter() {
        _classCallCheck(this, BaseDomAdapter);

        this.EVENTS = ['onblur', 'onchange', 'onclick', 'oncontextmenu', 'oncopy', 'oncut', 'ondblclick', 'onerror', 'onfocus', 'onfocusin', 'onfocusout', 'onhashchange', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpaste', 'onreset', 'onresize', 'onscroll', 'onselect', 'onsubmit', 'ontextinput', 'onunload', 'onwheel', 'onpointerdown', 'onpointerup', 'onpointercancel', 'onpointermove', 'onpointerover', 'onpointerout', 'onpointerenter', 'onpointerleave', 'ongotpointercapture', 'onlostpointercapture', 'onmspointerdown', 'onmspointerup', 'onmspointercancel', 'onmspointermove', 'onmspointerover', 'onmspointerout', 'onmspointerenter', 'onmspointerleave', 'onmsgotpointercapture', 'onmslostpointercapture'];
    }

    BaseDomAdapter.prototype.removeAttr = function removeAttr() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getAttr = function getAttr() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.hasAttr = function hasAttr() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.isSVGElement = function isSVGElement() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.hasEventHandler = function hasEventHandler() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getTagName = function getTagName() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.setAttr = function setAttr() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.setScriptContent = function setScriptContent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getScriptContent = function getScriptContent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getStyleContent = function getStyleContent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.setStyleContent = function setStyleContent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.needToProcessContent = function needToProcessContent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.needToProcessUrl = function needToProcessUrl() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.attachEventEmitter = function attachEventEmitter() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.hasIframeParent = function hasIframeParent() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getCrossDomainPort = function getCrossDomainPort() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getProxyUrl = function getProxyUrl() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.isTopParentIframe = function isTopParentIframe() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.sameOriginCheck = function sameOriginCheck() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.getClassName = function getClassName() {
        throw new Error('Not implemented');
    };

    BaseDomAdapter.prototype.isExistingTarget = function isExistingTarget() {
        throw new Error('Not implemented');
    };

    return BaseDomAdapter;
}();

exports.default = BaseDomAdapter;
module.exports = exports['default'];