'use strict';

exports.__esModule = true;

var _parse = require('parse5');

var _parse2 = _interopRequireDefault(_parse);

var _className = require('../../shadow-ui/class-name');

var _className2 = _interopRequireDefault(_className);

var _dom = require('../dom');

var _dom2 = _interopRequireDefault(_dom);

var _parse5DomAdapter = require('../dom/parse5-dom-adapter');

var _parse5DomAdapter2 = _interopRequireDefault(_parse5DomAdapter);

var _resourceProcessorBase = require('./resource-processor-base');

var _resourceProcessorBase2 = _interopRequireDefault(_resourceProcessorBase);

var _parse3 = require('../../utils/parse5');

var parse5Utils = _interopRequireWildcard(_parse3);

var _getBom = require('../../utils/get-bom');

var _getBom2 = _interopRequireDefault(_getBom);

var _internalProperties = require('../../processing/dom/internal-properties');

var _internalProperties2 = _interopRequireDefault(_internalProperties);

var _getStorageKey = require('../../utils/get-storage-key');

var _getStorageKey2 = _interopRequireDefault(_getStorageKey);

var _createSelfRemovingScript = require('../../utils/create-self-removing-script');

var _createSelfRemovingScript2 = _interopRequireDefault(_createSelfRemovingScript);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BODY_CREATED_EVENT_SCRIPT = (0, _createSelfRemovingScript2.default)(`
    if (window["${_internalProperties2.default.hammerhead}"])
        window["${_internalProperties2.default.hammerhead}"].sandbox.node.raiseBodyCreatedEvent();
`);

var PageProcessor = function (_ResourceProcessorBas) {
    _inherits(PageProcessor, _ResourceProcessorBas);

    function PageProcessor() {
        _classCallCheck(this, PageProcessor);

        var _this = _possibleConstructorReturn(this, _ResourceProcessorBas.call(this));

        _this.parser = new _parse2.default.Parser();

        _this.RESTART_PROCESSING = Symbol();
        _this.PARSED_BODY_CREATED_EVENT_SCRIPT = _this.parser.parseFragment(BODY_CREATED_EVENT_SCRIPT).childNodes[0];

        _this.serializer = new _parse2.default.Serializer();
        return _this;
    }

    PageProcessor.prototype._createRestoreStoragesScript = function _createRestoreStoragesScript(storageKey, storages) {
        var scriptStr = (0, _createSelfRemovingScript2.default)(`
            window.localStorage.setItem("${storageKey}", ${JSON.stringify(storages.localStorage)});
            window.sessionStorage.setItem("${storageKey}", ${JSON.stringify(storages.sessionStorage)});
        `);

        return this.parser.parseFragment(scriptStr).childNodes[0];
    };

    PageProcessor._getPageProcessingOptions = function _getPageProcessingOptions(ctx, urlReplacer) {
        return {
            crossDomainProxyPort: ctx.serverInfo.crossDomainPort,
            isIframe: ctx.isIframe,
            stylesheets: ctx.getInjectableStyles(),
            scripts: ctx.getInjectableScripts(),
            urlReplacer: urlReplacer,
            isIframeWithImageSrc: ctx.contentInfo && ctx.contentInfo.isIframeWithImageSrc
        };
    };

    PageProcessor._getPageMetas = function _getPageMetas(metaEls, domAdapter) {
        var metas = [];

        for (var i = 0; i < metaEls.length; i++) {
            metas.push({
                httpEquiv: domAdapter.getAttr(metaEls[i], 'http-equiv'),
                content: domAdapter.getAttr(metaEls[i], 'content'),
                charset: domAdapter.getAttr(metaEls[i], 'charset')
            });
        }

        return metas;
    };

    PageProcessor._addPageResources = function _addPageResources(head, processingOptions) {
        var result = [];

        if (processingOptions.stylesheets) {
            processingOptions.stylesheets.forEach(function (stylesheetUrl) {
                result.push(parse5Utils.createElement('link', [{ name: 'rel', value: 'stylesheet' }, { name: 'type', value: 'text/css' }, { name: 'class', value: _className2.default.uiStylesheet }, { name: 'href', value: stylesheetUrl }]));
            });
        }

        if (processingOptions.scripts) {
            processingOptions.scripts.forEach(function (scriptUrl) {
                result.push(parse5Utils.createElement('script', [{ name: 'type', value: 'text/javascript' }, { name: 'class', value: _className2.default.script }, { name: 'charset', value: 'UTF-8' }, { name: 'src', value: scriptUrl }]));
            });
        }

        for (var i = result.length - 1; i > -1; i--) {
            parse5Utils.insertElement(result[i], head);
        }
    };

    PageProcessor._addCharsetInfo = function _addCharsetInfo(head, charset) {
        parse5Utils.insertElement(parse5Utils.createElement('meta', [{ name: 'class', value: _className2.default.charset }, { name: 'charset', value: charset }]), head);
    };

    PageProcessor._changeMetas = function _changeMetas(metas, domAdapter) {
        if (metas) {
            metas.forEach(function (meta) {
                // TODO: Figure out how to emulate the tag behavior.
                if (domAdapter.getAttr(meta, 'name') === 'referrer') parse5Utils.setAttr(meta, 'content', 'unsafe-url');
            });
        }
    };

    PageProcessor._prepareHtml = function _prepareHtml(html, processingOpts) {
        if (processingOpts && processingOpts.iframeImageSrc) return `<html><body><img src="${processingOpts.iframeImageSrc}" /></body></html>`;

        return html;
    };

    PageProcessor.prototype._addRestoreStoragesScript = function _addRestoreStoragesScript(ctx, head) {
        var storageKey = (0, _getStorageKey2.default)(ctx.session.id, ctx.dest.host);
        var restoreStoragesScript = this._createRestoreStoragesScript(storageKey, ctx.restoringStorages);

        parse5Utils.insertElement(restoreStoragesScript, head);
    };

    PageProcessor.prototype._addBodyCreatedEventScript = function _addBodyCreatedEventScript(body) {
        parse5Utils.insertElement(this.PARSED_BODY_CREATED_EVENT_SCRIPT, body);
    };

    PageProcessor.prototype.shouldProcessResource = function shouldProcessResource(ctx) {
        // NOTE: In some cases, Firefox sends the default accept header for the script.
        // We should not try to process it as a page in this case.
        return (ctx.isPage || ctx.contentInfo.isIframeWithImageSrc) && !ctx.contentInfo.isScript && !ctx.contentInfo.isFileDownload;
    };

    PageProcessor.prototype.processResource = function processResource(html, ctx, charset, urlReplacer, processingOpts) {
        processingOpts = processingOpts || PageProcessor._getPageProcessingOptions(ctx, urlReplacer);

        var bom = (0, _getBom2.default)(html);

        html = bom ? html.replace(bom, '') : html;

        PageProcessor._prepareHtml(html, processingOpts);

        var root = this.parser.parse(html);
        var domAdapter = new _parse5DomAdapter2.default(processingOpts.isIframe, processingOpts.crossDomainProxyPort);
        var elements = parse5Utils.findElementsByTagNames(root, ['base', 'meta', 'head', 'body', 'frameset']);
        var base = elements.base ? elements.base[0] : null;
        var baseUrl = base ? domAdapter.getAttr(base, 'href') : '';
        var metas = elements.meta;
        var head = elements.head[0];
        var body = elements.body ? elements.body[0] : elements.frameset[0];

        if (metas && charset.fromMeta(PageProcessor._getPageMetas(metas, domAdapter))) return this.RESTART_PROCESSING;

        var domProcessor = new _dom2.default(domAdapter);
        var replacer = function replacer(resourceUrl, resourceType, charsetAttrValue) {
            return urlReplacer(resourceUrl, resourceType, charsetAttrValue, baseUrl);
        };

        domProcessor.forceProxySrcForImage = ctx.session.hasRequestEventListeners();
        parse5Utils.walkElements(root, function (el) {
            return domProcessor.processElement(el, replacer);
        });

        if (!ctx.isHtmlImport) {
            PageProcessor._addPageResources(head, processingOpts, domAdapter);
            this._addBodyCreatedEventScript(body, domAdapter);

            if (ctx.restoringStorages && !processingOpts.isIframe) this._addRestoreStoragesScript(ctx, head);
        }

        PageProcessor._changeMetas(metas, domAdapter);
        PageProcessor._addCharsetInfo(head, charset.get(), domAdapter);

        return (bom || '') + this.serializer.serialize(root);
    };

    return PageProcessor;
}(_resourceProcessorBase2.default);

exports.default = new PageProcessor();
module.exports = exports['default'];