'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

let generatePreferences = (() => {
    var _ref = (0, _asyncToGenerator3.default)(function* (profileDir, { marionettePort, config }) {
        var prefsFileName = _path2.default.join(profileDir, 'user.js');

        var prefs = ['user_pref("browser.link.open_newwindow.override.external", 2);', 'user_pref("app.update.enabled", false);', 'user_pref("app.update.auto", false);', 'user_pref("app.update.mode", 0);', 'user_pref("app.update.service.enabled", false);', 'user_pref("browser.shell.checkDefaultBrowser", false);', 'user_pref("browser.usedOnWindows10", true);', 'user_pref("browser.rights.3.shown", true);', 'user_pref("browser.startup.homepage_override.mstone","ignore");', 'user_pref("browser.tabs.warnOnCloseOtherTabs", false);', 'user_pref("browser.tabs.warnOnClose", false);', 'user_pref("browser.sessionstore.resume_from_crash", false);', 'user_pref("toolkit.telemetry.reportingpolicy.firstRun", false);', 'user_pref("toolkit.telemetry.enabled", false);', 'user_pref("toolkit.telemetry.rejected", true);', 'user_pref("datareporting.healthreport.uploadEnabled", false);', 'user_pref("datareporting.healthreport.service.enabled", false);', 'user_pref("datareporting.healthreport.service.firstRun", false);', 'user_pref("datareporting.policy.dataSubmissionEnabled", false);', 'user_pref("datareporting.policy.dataSubmissionPolicyBypassNotification", true);', 'user_pref("app.shield.optoutstudies.enabled", false);', 'user_pref("extensions.shield-recipe-client.enabled", false);', 'user_pref("extensions.shield-recipe-client.first_run", false);', 'user_pref("extensions.shield-recipe-client.startupExperimentPrefs.browser.newtabpage.activity-stream.enabled", false);', 'user_pref("devtools.toolbox.host", "window");', 'user_pref("devtools.toolbox.previousHost", "bottom");', 'user_pref("signon.rememberSignons", false);'];

        if (marionettePort) {
            prefs = prefs.concat([`user_pref("marionette.port", ${marionettePort});`, 'user_pref("marionette.enabled", true);']);
        }

        if (config.disableMultiprocessing) {
            prefs = prefs.concat(['user_pref("browser.tabs.remote.autostart", false);', 'user_pref("browser.tabs.remote.autostart.2", false);']);
        }

        yield (0, _promisifiedFunctions.writeFile)(prefsFileName, prefs.join('\n'));
    });

    return function generatePreferences(_x, _x2) {
        return _ref.apply(this, arguments);
    };
})();

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _tempDirectory = require('../../../../utils/temp-directory');

var _tempDirectory2 = _interopRequireDefault(_tempDirectory);

var _promisifiedFunctions = require('../../../../utils/promisified-functions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (() => {
    var _ref2 = (0, _asyncToGenerator3.default)(function* (runtimeInfo) {
        const tmpDir = yield _tempDirectory2.default.createDirectory('firefox-profile');

        yield generatePreferences(tmpDir.path, runtimeInfo);

        return tmpDir;
    });

    return function (_x3) {
        return _ref2.apply(this, arguments);
    };
})();

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9icm93c2VyL3Byb3ZpZGVyL2J1aWx0LWluL2ZpcmVmb3gvY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJwcm9maWxlRGlyIiwibWFyaW9uZXR0ZVBvcnQiLCJjb25maWciLCJwcmVmc0ZpbGVOYW1lIiwicGF0aCIsImpvaW4iLCJwcmVmcyIsImNvbmNhdCIsImRpc2FibGVNdWx0aXByb2Nlc3NpbmciLCJnZW5lcmF0ZVByZWZlcmVuY2VzIiwicnVudGltZUluZm8iLCJ0bXBEaXIiLCJUZW1wRGlyZWN0b3J5IiwiY3JlYXRlRGlyZWN0b3J5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7K0NBS0EsV0FBb0NBLFVBQXBDLEVBQWdELEVBQUVDLGNBQUYsRUFBa0JDLE1BQWxCLEVBQWhELEVBQTRFO0FBQ3hFLFlBQUlDLGdCQUFnQkMsZUFBS0MsSUFBTCxDQUFVTCxVQUFWLEVBQXNCLFNBQXRCLENBQXBCOztBQUVBLFlBQUlNLFFBQVEsQ0FDUixnRUFEUSxFQUVSLHlDQUZRLEVBR1Isc0NBSFEsRUFJUixrQ0FKUSxFQUtSLGlEQUxRLEVBTVIsd0RBTlEsRUFPUiw2Q0FQUSxFQVFSLDRDQVJRLEVBU1IsaUVBVFEsRUFVUix3REFWUSxFQVdSLCtDQVhRLEVBWVIsNkRBWlEsRUFhUixpRUFiUSxFQWNSLGdEQWRRLEVBZVIsZ0RBZlEsRUFnQlIsK0RBaEJRLEVBaUJSLGlFQWpCUSxFQWtCUixrRUFsQlEsRUFtQlIsaUVBbkJRLEVBb0JSLGlGQXBCUSxFQXFCUix1REFyQlEsRUFzQlIsOERBdEJRLEVBdUJSLGdFQXZCUSxFQXdCUix3SEF4QlEsRUF5QlIsK0NBekJRLEVBMEJSLHVEQTFCUSxFQTJCUiw2Q0EzQlEsQ0FBWjs7QUE4QkEsWUFBSUwsY0FBSixFQUFvQjtBQUNoQkssb0JBQVFBLE1BQU1DLE1BQU4sQ0FBYSxDQUNoQixnQ0FBK0JOLGNBQWUsSUFEOUIsRUFFakIsd0NBRmlCLENBQWIsQ0FBUjtBQUlIOztBQUVELFlBQUlDLE9BQU9NLHNCQUFYLEVBQW1DO0FBQy9CRixvQkFBUUEsTUFBTUMsTUFBTixDQUFhLENBQ2pCLG9EQURpQixFQUVqQixzREFGaUIsQ0FBYixDQUFSO0FBSUg7O0FBRUQsY0FBTSxxQ0FBVUosYUFBVixFQUF5QkcsTUFBTUQsSUFBTixDQUFXLElBQVgsQ0FBekIsQ0FBTjtBQUNILEs7O29CQWhEY0ksbUI7Ozs7O0FBTGY7Ozs7QUFDQTs7OztBQUNBOzs7OztnREFxRGUsV0FBZ0JDLFdBQWhCLEVBQTZCO0FBQ3hDLGNBQU1DLFNBQVMsTUFBTUMsd0JBQWNDLGVBQWQsQ0FBOEIsaUJBQTlCLENBQXJCOztBQUVBLGNBQU1KLG9CQUFvQkUsT0FBT1AsSUFBM0IsRUFBaUNNLFdBQWpDLENBQU47O0FBRUEsZUFBT0MsTUFBUDtBQUNILEsiLCJmaWxlIjoiYnJvd3Nlci9wcm92aWRlci9idWlsdC1pbi9maXJlZm94L2NyZWF0ZS10ZW1wLXByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBUZW1wRGlyZWN0b3J5IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3RlbXAtZGlyZWN0b3J5JztcbmltcG9ydCB7IHdyaXRlRmlsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL3Byb21pc2lmaWVkLWZ1bmN0aW9ucyc7XG5cblxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVQcmVmZXJlbmNlcyAocHJvZmlsZURpciwgeyBtYXJpb25ldHRlUG9ydCwgY29uZmlnIH0pIHtcbiAgICB2YXIgcHJlZnNGaWxlTmFtZSA9IHBhdGguam9pbihwcm9maWxlRGlyLCAndXNlci5qcycpO1xuXG4gICAgdmFyIHByZWZzID0gW1xuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5saW5rLm9wZW5fbmV3d2luZG93Lm92ZXJyaWRlLmV4dGVybmFsXCIsIDIpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLmVuYWJsZWRcIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLmF1dG9cIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLm1vZGVcIiwgMCk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImFwcC51cGRhdGUuc2VydmljZS5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5zaGVsbC5jaGVja0RlZmF1bHRCcm93c2VyXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci51c2VkT25XaW5kb3dzMTBcIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIucmlnaHRzLjMuc2hvd25cIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIuc3RhcnR1cC5ob21lcGFnZV9vdmVycmlkZS5tc3RvbmVcIixcImlnbm9yZVwiKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci50YWJzLndhcm5PbkNsb3NlT3RoZXJUYWJzXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci50YWJzLndhcm5PbkNsb3NlXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5zZXNzaW9uc3RvcmUucmVzdW1lX2Zyb21fY3Jhc2hcIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJ0b29sa2l0LnRlbGVtZXRyeS5yZXBvcnRpbmdwb2xpY3kuZmlyc3RSdW5cIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJ0b29sa2l0LnRlbGVtZXRyeS5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwidG9vbGtpdC50ZWxlbWV0cnkucmVqZWN0ZWRcIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImRhdGFyZXBvcnRpbmcuaGVhbHRocmVwb3J0LnVwbG9hZEVuYWJsZWRcIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJkYXRhcmVwb3J0aW5nLmhlYWx0aHJlcG9ydC5zZXJ2aWNlLmVuYWJsZWRcIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJkYXRhcmVwb3J0aW5nLmhlYWx0aHJlcG9ydC5zZXJ2aWNlLmZpcnN0UnVuXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGF0YXJlcG9ydGluZy5wb2xpY3kuZGF0YVN1Ym1pc3Npb25FbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGF0YXJlcG9ydGluZy5wb2xpY3kuZGF0YVN1Ym1pc3Npb25Qb2xpY3lCeXBhc3NOb3RpZmljYXRpb25cIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImFwcC5zaGllbGQub3B0b3V0c3R1ZGllcy5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZXh0ZW5zaW9ucy5zaGllbGQtcmVjaXBlLWNsaWVudC5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZXh0ZW5zaW9ucy5zaGllbGQtcmVjaXBlLWNsaWVudC5maXJzdF9ydW5cIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJleHRlbnNpb25zLnNoaWVsZC1yZWNpcGUtY2xpZW50LnN0YXJ0dXBFeHBlcmltZW50UHJlZnMuYnJvd3Nlci5uZXd0YWJwYWdlLmFjdGl2aXR5LXN0cmVhbS5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGV2dG9vbHMudG9vbGJveC5ob3N0XCIsIFwid2luZG93XCIpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJkZXZ0b29scy50b29sYm94LnByZXZpb3VzSG9zdFwiLCBcImJvdHRvbVwiKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwic2lnbm9uLnJlbWVtYmVyU2lnbm9uc1wiLCBmYWxzZSk7J1xuICAgIF07XG5cbiAgICBpZiAobWFyaW9uZXR0ZVBvcnQpIHtcbiAgICAgICAgcHJlZnMgPSBwcmVmcy5jb25jYXQoW1xuICAgICAgICAgICAgYHVzZXJfcHJlZihcIm1hcmlvbmV0dGUucG9ydFwiLCAke21hcmlvbmV0dGVQb3J0fSk7YCxcbiAgICAgICAgICAgICd1c2VyX3ByZWYoXCJtYXJpb25ldHRlLmVuYWJsZWRcIiwgdHJ1ZSk7J1xuICAgICAgICBdKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmRpc2FibGVNdWx0aXByb2Nlc3NpbmcpIHtcbiAgICAgICAgcHJlZnMgPSBwcmVmcy5jb25jYXQoW1xuICAgICAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIudGFicy5yZW1vdGUuYXV0b3N0YXJ0XCIsIGZhbHNlKTsnLFxuICAgICAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIudGFicy5yZW1vdGUuYXV0b3N0YXJ0LjJcIiwgZmFsc2UpOycsXG4gICAgICAgIF0pO1xuICAgIH1cblxuICAgIGF3YWl0IHdyaXRlRmlsZShwcmVmc0ZpbGVOYW1lLCBwcmVmcy5qb2luKCdcXG4nKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIChydW50aW1lSW5mbykge1xuICAgIGNvbnN0IHRtcERpciA9IGF3YWl0IFRlbXBEaXJlY3RvcnkuY3JlYXRlRGlyZWN0b3J5KCdmaXJlZm94LXByb2ZpbGUnKTtcblxuICAgIGF3YWl0IGdlbmVyYXRlUHJlZmVyZW5jZXModG1wRGlyLnBhdGgsIHJ1bnRpbWVJbmZvKTtcblxuICAgIHJldHVybiB0bXBEaXI7XG59XG4iXX0=
